Description: >
   Ani Jeremiah/ Udacity High Availability Web Application Project
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String


Resources:
  LBSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow hhtp to Load Balanacer
        VpcId:
            Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
        GroupName: Security Group for our Load Balancer
        SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
  
  WebServerSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http / SSH only from local VPC
        VpcId:
            Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
        GroupName: Security Group for WebServer internal traffic
        SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install unzip awscli -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          sudo aws s3 cp s3://udacity-project2-bucket123/index.html 

      ImageId: ami-0557a15b87f6559cf 
      #KeyName: 
      IamInstanceProfile:
        Fn::ImportValue: !Sub "${EnvironmentName}-MY-IAM"
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t3.medium
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"
            DeleteOnTermination: true
            VolumeType: "gp2"

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-Private-Subnets"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: "4"
      MaxSize: "6"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppLB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PublicSubnet-1"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PublicSubnet-2"
      SecurityGroups:
        - Ref: LBSecGroup

  Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: "80"
      Protocol: HTTP

  ALBListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  WebAppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:
  Website:
    Description: Public DNS of the Load Balancer
    Value: !Join ["", ["http://", !GetAtt [WebAppLB, DNSName]]]